{
  "id": "CPer9Gq7c6BY",
  "parentId": "CP63Je4zKaFa",
  "index": 2,
  "content": "\"(begin-for-syntax\\n  (define-syntax-class symbol-spec\\n    (pattern ((group:id ...) ...)))\\n  (define-splicing-syntax-class footprint-spec\\n    (pattern (~seq #:DIP (num pin ...))\\n             #:with res #'(FpSpec (~a \\\"DIP-\\\" num) (fp-DIP num) '(pin ...)))\\n    (pattern (~seq #:QFN (num pin ...))\\n             #:with res #'(FpSpec (~a \\\"QFN-\\\" num) (fp-QFN num) '(pin ...)))\\n    (pattern (~seq #:LQFP (num pin ...))\\n             #:with res #'(FpSpec (~a \\\"LQFP-\\\" num) (fp-LQFP num) '(pin ...)))\\n    (pattern (~seq #:TQFP (num pin ...))\\n             #:with res #'(FpSpec (~a \\\"TQFP-\\\" num) (fp-TQFP num) '(pin ...)))\\n    (pattern (~seq #:FP (fp pin ...))\\n             #:with res #'(FpSpec #f fp '(pin ...)))\\n    (pattern (~seq #:named-FP (fp name pin ...))\\n             #:with res #'(FpSpec name fp '(pin ...)))\\n    (pattern (~seq #:auto-FP fp)\\n             #:with res #'(FpSpec #f fp (map pad-spec-name (footprint-pads fp))))\\n    (pattern (~seq #:auto-named-FP (name fp))\\n             #:with res\\n             #`(FpSpec \\n                 name fp \\n                 (filter-not\\n                   string?\\n                   (map pad-spec-name \\n                     (footprint-pads fp)))))))\"",
  "column": 1,
  "fold": false,
  "thundar": false,
  "utility": false,
  "name": "",
  "lang": "racket",
  "type": "CODE",
  "imports": "{}",
  "exports": "{}",
  "midports": "{}",
  "repoId": "102c7cad-cc6a-4ac2-b30c-d5e168c069bf"
}