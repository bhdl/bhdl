{
  "id": "CPBQhdVgRwBH",
  "parentId": "CPckUrdGFJME",
  "index": 29,
  "content": "\"(define (Composite->netlist-1 comp)\\n  \\\"From a Composite to a list netlist ((a b c) (d e f)).\\\"\\n  ;; from Composite to netlist\\n  ;; 1. loop through all the connections, collect atoms\\n  (let* ([all-comps (collect-all-composites comp)]\\n         [all-nets (apply append (for/list ([comp all-comps])\\n                                   (Composite-nets comp)))]\\n         ;; this merge does not take into account weights\\n         [merged (merge-nets all-nets)])\\n    ;; FIXME this does not seem to be the bug that cannot reach certain atoms,\\n    ;; so I'm adding the filtering of 1-size-net back.\\n    ;; (filter (lambda (x) (> (length (Net-pins x)) 1)) merged)\\n    merged))\"",
  "column": 1,
  "fold": false,
  "thundar": false,
  "utility": false,
  "name": "",
  "lang": "racket",
  "type": "CODE",
  "imports": "{}",
  "exports": "{}",
  "midports": "{}",
  "repoId": "102c7cad-cc6a-4ac2-b30c-d5e168c069bf"
}