{
  "id": "CPWM8CC6Lea7",
  "content": "\"(define-syntax (make-circuit0 stx)\\n  (syntax-parse \\n    stx\\n    [(_ (~alt\\n          (~optional (~seq #:external-pins (ext-pin ...))\\n                     #:defaults ([(ext-pin 1) null]))\\n          (~optional (~seq #:layout p-name)\\n                     #:defaults ([p-name #'#f]))\\n          (~optional (~seq #:where where-clause)\\n                     #:defaults ([where-clause #'()]))\\n          (~optional (~seq #:tmp v))\\n          (~seq #:vars (dv ...))\\n          (~seq #:connect connect-clause)) ...)\\n     #`(let ([self-obj (create-simple-Composite ext-pin ...)])\\n         (syntax-parameterize \\n           ([self (make-rename-transformer #'self-obj)])\\n           (match-let* (dv ... ...)\\n             (when p-name\\n               (set-Composite-pict! \\n                 self-obj \\n                 (maybe-atom->pict p-name)))\\n             ;; do the connections\\n             (set-Composite-nets!\\n               self-obj\\n               (apply append \\n                      (map Composite-nets\\n                           (flatten \\n                             (list connect-clause ...\\n                                   )))))\\n             self-obj)))]))\"",
  "column": 1,
  "fold": false,
  "thundar": false,
  "utility": false,
  "name": "",
  "lang": "racket",
  "type": "CODE",
  "imports": "{}",
  "exports": "{\"make-circuit0\":true}",
  "midports": "{}",
  "repoId": "102c7cad-cc6a-4ac2-b30c-d5e168c069bf",
  "parent": "CPQU4nPmdVqN",
  "children": []
}