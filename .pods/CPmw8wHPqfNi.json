{
  "id": "CPmw8wHPqfNi",
  "parentId": "CPRfakBVH9q6",
  "index": 4,
  "content": "\"(define (Composite->dsn comp place-spec)\\n  \\\"Generate Spectra file .dsn to be used for routing.\\\"\\n  ;; 1. collect all atoms\\n  (let* ([xs (hash-ref place-spec 'xs)]\\n         [ys (hash-ref place-spec 'ys)]\\n         [as (hash-ref place-spec 'as)]\\n         [atoms (collect-all-atoms comp)]\\n         ;; FIXME these index should be same across different calls\\n         [Hatom=>index (for/hash ([atom atoms]\\n                                  [i (in-naturals 1)])\\n                                 (values atom i))]\\n         [die (Composite-pict comp)]\\n         ;; net\\n         ;; 1. get a list of nets\\n         [nets (Composite->netlist comp)]\\n         ;; 2. assign names for the nets\\n         [Hnet=>index (for/hash ([net nets]\\n                                 ;; CAUTION the net 0 is special, and must have ID \\\"\\\"\\n                                 [i (in-naturals 1)])\\n                                (values net i))]\\n         ;; 3. get a map from atom pin to nets\\n         [Hpin=>net (for*/hash ([net nets]\\n                                [pin (Net-pins net)])\\n                               (values pin net))]\\n         ;; atom position\\n         [Hatom=>loc (for/hash ([atom atoms]\\n                                [x xs]\\n                                [y ys]\\n                                [a as])\\n                               (values atom (Point x y a)))])\\n    `(pcb \\n       placeholder.dsn\\n       ,@(dsn-prefix (/ (pict-width die) (fp-scale))\\n                     (/ (pict-height die) (fp-scale)))\\n         (placement \\n           ,@(for/list ([atom atoms])\\n               (match-let\\n                 ([(Point x y a)\\n                   (fix-atom-xy\\n                     atom (hash-ref Hatom=>loc atom))]\\n                  [ID (atom->ID atom Hatom=>index)])\\n                 `(component\\n                    ,ID (place ,ID\\n                               ;; from mm to um\\n                               ;;\\n                               ;; FIXME exact-round\\n                               ,(* x 1000)\\n                               ;; CAUTION all y are negative!\\n                               ,(* (- y) 1000)\\n                               ;; side: front or back\\n                               front\\n                               ;; rotation, in degrees, contains up to\\n                               ;; 2 digits after\\n                               ;; decimal. Counterclockwise from X\\n                               ;; positive.\\n                               ,(* (/ a pi) 180))))))\\n         (library\\n           ,@(for/list ([atom atoms])\\n               `(image \\n                  ,(atom->ID atom Hatom=>index)\\n                  ,@(for/list ([line (footprint-lines (atom->fp atom))])\\n                      (match line\\n                        [(line-spec x1 y1 x2 y2 width)\\n                         `(outline \\n                            (path signal\\n                                  ,(* 1000 width)\\n                                  ,(* 1000 x1)\\n                                  ;; CAUTION all y are negative\\n                                  ,(* 1000 (- y1))\\n                                  ,(* 1000 x2)\\n                                  ,(* 1000 (- y2))))]))\\n                    ,@(for/list \\n                        ([pad (footprint-pads (atom->fp atom))]\\n                         [i (in-naturals 1)])\\n                        (match pad\\n                          [(pad-spec name x y a mounting-type\\n                                     shape (list s1 s2)\\n                                     dsize layer)\\n                           `(pin ,(padstack-id pad)\\n                                 ;; ,i\\n                                 ,(Pin-name\\n                                    (pin-ref\\n                                      atom\\n                                      (string->symbol\\n                                        (~a \\\"fp-\\\" name))))\\n                                  ;; CAUTION all y are negative\\n                                  ,(* x 1000) ,(* (- y) 1000))]))))\\n             ;; padstacks FIXME remove duplicate\\n             ,@(remove-duplicates\\n                 (apply \\n                   append\\n                   (for/list ([atom atoms])\\n                     (for/list \\n                       ([pad (footprint-pads \\n                               (atom->fp atom))])\\n                       (match pad\\n                         [(pad-spec name x y a\\n                                    mounting-type\\n                                    shape (list s1 s2) \\n                                    dsize layer)\\n                          (padstack-spec pad)])))))\\n               ;; one last pre-defined via\\n               (padstack \\\"Via[0-1]_1000:400_um\\\"\\n                         (shape (circle F.Cu 1000))\\n                         (shape (circle B.Cu 1000))\\n                         (attach off)))\\n         (network \\n           ,@(for/list ([net nets]\\n                        [i (in-naturals 1)])\\n               ;; FIXME there seems to be overlapping in nets\\n               `(net ,i (pins\\n                          ,@(for/list ([pin (Net-pins net)])\\n                              (string->symbol\\n                                (~a (atom->ID \\n                                      (Pin-parent pin)\\n                                      Hatom=>index)\\n                                    \\\"-\\\"\\n                                    (Pin-name pin)))))))))))\"",
  "column": 1,
  "fold": false,
  "thundar": false,
  "utility": false,
  "name": "",
  "lang": "racket",
  "type": "CODE",
  "imports": "{}",
  "exports": "{\"Composite->dsn\":true}",
  "midports": "{}",
  "repoId": "102c7cad-cc6a-4ac2-b30c-d5e168c069bf"
}