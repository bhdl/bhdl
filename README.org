#+TITLE: Rackematic: a framework for Schematic/PCB design

* Setup
Clone kicad footprints into =~/git/reading/kicad-footprints= (configurable in
=footprint-library.rkt=):

#+begin_example
cd ~/git/reading/
git clone https://github.com/KiCad/kicad-footprints
#+end_example

Then run some test in [[file:test.rkt][test.rkt]]. For example, run the =test-555= module:

#+begin_example
raco test -s test-555 test.rkt
#+end_example

** Running racket code
The framework is implemented in [[https://racket-lang.org/][racket]]. Running racket code via command line is
not very common. You can run racket code via Emacs. If you are not comfortable
with Emacs, you can use [[https://docs.racket-lang.org/drracket/index.html][DrRacket]] which should come with your racket
installation.

* code structure

- [[file:footprint.rkt][footprint.rkt]]: library for reading kicad footprint library
- [[file:footprint-library.rkt][footprint-library.rkt]]: wrapper for different footprint packaging (DIP, SOIC, etc)
- [[file:gerber.rkt][gerber.rkt]]: library for generating gerber file
- [[file:gerber-viewer.rkt][gerber-viewer.rkt]]: library for draw visualization for gerber files
- [[file:library.rkt][library.rkt]]: component library
- [[file:schematic.rkt][schematic.rkt]]: syntax for schematic connection
- [[file:back/footprint.rkt][back/footprint.rkt]]: define footprint library natively (instead of reading kicad libraries)
- [[file:symbol.rkt][symbol.rkt]]: define schematic symbol library natively

